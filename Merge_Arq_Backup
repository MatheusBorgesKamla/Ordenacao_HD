int mergeArq(REGISTRO **reg1, REGISTRO **reg2, char *arq_name1, char *arq_name2, char *arq_fname)
{
    FILE *arq1 = fopen(arq_name1, "r+b");
    FILE *arq2 = fopen(arq_name2, "r+b");
    FILE *arq_fin = fopen(arq_fname, "w+b");

    if (arq1 == NULL || arq2 == NULL || arq_fin == NULL)
    {
        return -1;
    }

    fseek(arq1, 0, SEEK_END);
    fseek(arq2, 0, SEEK_END);
    /* Lê o indicador de posição (em bytes)*/
    int n1 = ftell(arq1);
    int n2 = ftell(arq2);

    if (n1 == 0 || n2 == 0)
    {
        return 0;
    }

    n1 = n1 - sizeof(char);
    n1 = n1 / (sizeof(REGISTRO));
    n2 = n2 - sizeof(char);
    n2 = n2 / (sizeof(REGISTRO));

    *reg1 = (REGISTRO **)malloc(n1 * sizeof(REGISTRO));
    *reg2 = (REGISTRO **)malloc(n2 * sizeof(REGISTRO));

    REGISTRO reg_aux;
    char status = '0';
    rewind(arq1);
    rewind(arq2);
    fwrite(&status, sizeof(char), 1, arq1);
    fwrite(&status, sizeof(char), 1, arq2);
    fwrite(&status, sizeof(char), 1, arq_fin);
    fseek(arq1, sizeof(char), SEEK_SET);
    fseek(arq2, sizeof(char), SEEK_SET);

    int cont1 = 0, cont2 = 0, compare2 = 0, compare3 = 2, compare4 = 2, n, teste;
    fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
    reg1[0][cont1] = reg_aux;
    fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
    reg2[0][cont2] = reg_aux;
    while (1)
    {
        //printf("-- COM1: %d COM2: %d --",cont1, cont2);
        if (reg1[0][cont1].campo1 < reg2[0][cont2].campo1)
        {
            fwrite(&reg1[0][cont1], sizeof(REGISTRO), 1, arq_fin);
            cont1++;
            fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
            reg1[0][cont1] = reg_aux;
        }
        else if (reg2[0][cont2].campo1 < reg1[0][cont1].campo1)
        {
            fwrite(&reg2[0][cont2], sizeof(REGISTRO), 1, arq_fin);
            cont2++;
            fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
            reg2[0][cont2] = reg_aux;
        }
        else
        {
            int a;
            if (strlen(reg1[0][cont1].campo2) < strlen(reg2[0][cont2].campo2))
            {
                n = strlen(reg1[0][cont1].campo2);
                a = 1;
            }
            else if(strlen(reg2[0][cont2].campo2) < strlen(reg1[0][cont1].campo2))
            {
                n = strlen(reg2[0][cont2].campo2);
                a = -1;
            }else{
                n = strlen(reg1[0][cont1].campo2);
                a = 0;
            }
            for (int j = 0; j < n; j++)
            {
                if (reg1[0][cont1].campo2[j] < reg2[0][cont2].campo2[j])
                {
                    compare2 = 1;
                    break;
                }
                else if (reg2[0][cont2].campo2[j] < reg1[0][cont1].campo2[j])
                {
                    compare2 = -1;
                    break;
                }
                else if(j == n-1 && a==1){
                    printf("%d %s -> %d %s \n",reg1[0][cont1].campo1,reg1[0][cont1].campo2,reg2[0][cont2].campo1,reg2[0][cont2].campo2);
                    fwrite(&reg1[0][cont1], sizeof(REGISTRO), 1, arq_fin);
                    cont1++;
                    fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
                    reg1[0][cont1] = reg_aux;
                    compare2 = 10;
                }
                else if(j == n-1 && a==-1){
                    printf("%d %s -> %d %s \n",reg2[0][cont2].campo1,reg2[0][cont2].campo2,reg1[0][cont1].campo1,reg1[0][cont1].campo2);
                    fwrite(&reg2[0][cont2], sizeof(REGISTRO), 1, arq_fin);
                    cont2++;
                    fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
                    reg2[0][cont2] = reg_aux;
                    compare2 = 10;
                }
            }
            if (compare2 == 1)
            {
                //printf("%d %s -> %d %s \n",reg1[0][cont1].campo1,reg1[0][cont1].campo2,reg2[0][cont2].campo1,reg2[0][cont2].campo2);
                fwrite(&reg1[0][cont1], sizeof(REGISTRO), 1, arq_fin);
                cont1++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
                reg1[0][cont1] = reg_aux;
            }
            else if (compare2 == -1)
            {
                //printf("%d %s -> %d %s \n",reg2[0][cont2].campo1,reg2[0][cont2].campo2,reg1[0][cont1].campo1,reg1[0][cont1].campo2);
                fwrite(&reg2[0][cont2], sizeof(REGISTRO), 1, arq_fin);
                cont2++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
                reg2[0][cont2] = reg_aux;
            }
            
            else if (compare2 == 0 && a == 0)
            {
                printf("%d %s -- %d %s \n",reg2[0][cont2].campo1,reg2[0][cont2].campo2,reg1[0][cont1].campo1,reg1[0][cont1].campo2);
                compare3 = 2;
                if (strlen(reg1[0][cont1].campo3) <= strlen(reg2[0][cont2].campo3))
                {
                    n = strlen(reg1[0][cont1].campo3);
                }
                else
                {
                    n = strlen(reg2[0][cont2].campo3);
                }
                for (int j = 0; j < n; j++)
                {
                    if (reg1[0][cont1].campo3[j] < reg2[0][cont2].campo3[j])
                    {
                        compare3 = 1;
                        break;
                    }
                    else if (reg1[0][cont1].campo3[j] < reg2[0][cont2].campo3[j])
                    {
                        compare3 = -1;
                        break;
                    }
                    
                    else if (reg1[0][cont1].campo3[j] == reg2[0][cont2].campo3[j] && j == n-1)
                    {
                        compare3 = 0;
                    }
                    
                }
            }
            if (compare3 == 1)
            {
                //printf("Entrou aqui ");
                fwrite(&reg1[0][cont1], sizeof(REGISTRO), 1, arq_fin);
                cont1++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
                reg1[0][cont1] = reg_aux;
            }
            else if (compare3 == -1)
            {
                //printf("Entrou aqui ");
                fwrite(&reg2[0][cont2], sizeof(REGISTRO), 1, arq_fin);
                cont2++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
                reg2[0][cont2] = reg_aux;
            }
            else if (compare3 == 0)
            {
                printf("Entrou aqui ");
                compare4 = 2;
                for (int j = 6; j < 10; j++)
                {
                    if (reg1[0][cont1].campo4[j] < reg2[0][cont2].campo4[j])
                    {
                        compare4 = 1;
                        break;
                    }
                    else if (reg2[0][cont2].campo4[j] < reg1[0][cont1].campo4[j])
                    {
                        compare4 = -1;
                        break;
                    }
                    else if (reg2[0][cont2].campo4[j] == reg1[0][cont1].campo4[j] && j == 9)
                    {
                        compare4 = 0;
                    }
                }
                if (compare4 == 0)
                {
                    printf("Entrou aqui ");
                    if (reg1[0][cont1].campo4[4] < reg2[0][cont2].campo4[4] || reg1[0][cont1].campo4[3] < reg2[0][cont2].campo4[3])
                    {
                        compare4 = 1;
                    }
                    else if (reg2[0][cont2].campo4[4] < reg1[0][cont1].campo4[4] || reg2[cont2][cont2].campo4[3] < reg1[0][cont1].campo4[3])
                    {
                        compare4 = -1;
                    }
                    else
                    {
                        if (reg1[0][cont1].campo4[0] < reg2[0][cont2].campo4[0] || reg1[0][cont1].campo4[1] < reg2[0][cont2].campo4[1])
                        {
                            compare4 = 1;
                        }
                        else if (reg2[0][cont2].campo4[0] < reg1[0][cont1].campo4[0] || reg2[0][cont2].campo4[1] < reg1[0][cont1].campo4[1])
                        {
                            compare4 = -1;
                        }
                    }
                }
            }
            if (compare4 == 1)
            {
                fwrite(&reg1[0][cont1], sizeof(REGISTRO), 1, arq_fin);
                cont1++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
                reg1[0][cont1] = reg_aux;
            }
            else if (compare4 == -1)
            {
                fwrite(&reg2[0][cont2], sizeof(REGISTRO), 1, arq_fin);
                cont2++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
                reg2[0][cont2] = reg_aux;
            }
            else if (compare4 == 0)
            {
                fwrite(&reg1[0][cont1], sizeof(REGISTRO), 1, arq_fin);
                cont1++;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq1);
                reg1[0][cont1] = reg_aux;
                fread(&reg_aux, sizeof(REGISTRO), 1, arq2);
                cont2++;
                reg2[0][cont2] = reg_aux;
            }
        }
        if (cont1 >= n1 || cont2 >= n2)
        {
            break;
        }
    }
    if (cont1 == n1)
    {
        fwrite(&reg2[0][cont2], sizeof(REGISTRO), 1, arq_fin);
        cont2++;
    }
    else
    {
        fwrite(&reg1[0][cont2], sizeof(REGISTRO), 1, arq_fin);
        cont1++;
    }
    printf("Cont1: %d Cont2: %d", cont1, cont2);
    status = '1';
    rewind(arq1);
    rewind(arq2);
    fwrite(&status, sizeof(char), 1, arq1);
    fwrite(&status, sizeof(char), 1, arq2);
    fwrite(&status, sizeof(char), 1, arq_fin);
    fclose(arq1);
    fclose(arq2);
    fclose(arq_fin);
    return 1;
}
